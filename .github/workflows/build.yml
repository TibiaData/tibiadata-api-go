name: build

on:
  push:
    branches:
      - "main"
      - "feature-*"
      - "bug-*"
    paths:
      - "src/**"
      - "Dockerfile"
      - "go.mod"
      - "go.sum"
  release:
    types: [published]
  workflow_dispatch:

permissions:
  contents: read
  id-token: write
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      docker_build_digest: ${{ steps.docker_build.outputs.digest }}
      docker_meta_version: ${{ steps.docker_meta.outputs.version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Docker meta
        id: docker_meta
        uses: docker/metadata-action@v5
        with:
          images: |
            tibiadata/tibiadata-api-go
            ghcr.io/tibiadata/tibiadata-api-go
          tags: |
            type=edge
            type=ref,event=branch,enable=${{ (github.ref != 'refs/heads/main') }}
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}
            type=semver,pattern={{major}}.{{minor}}
        env:
          DOCKER_METADATA_ANNOTATIONS_LEVELS: manifest,index

      - name: Install Cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm/v7,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          annotations: ${{ steps.docker_meta.outputs.annotations }}
          labels: ${{ steps.docker_meta.outputs.labels }}
          tags: ${{ steps.docker_meta.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          sbom: true
          build-args: |
            TibiaDataBuildBuilder=github
            TibiaDataBuildRelease=${{ fromJSON(steps.docker_meta.outputs.json).labels['org.opencontainers.image.version'] }}
            TibiaDataBuildCommit=${{ fromJSON(steps.docker_meta.outputs.json).labels['org.opencontainers.image.revision'] }}

      - name: Sign the images (with GitHub OIDC Token)
        if: github.event_name != 'pull_request'
        run: |
          cosign sign --yes --recursive \
            tibiadata/tibiadata-api-go@${{ steps.docker_build.outputs.digest }}

          cosign sign --yes --recursive \
            ghcr.io/tibiadata/tibiadata-api-go@${{ steps.docker_build.outputs.digest }}

  argocd:
    if: github.event_name == 'release' || (github.event_name == 'push' && github.ref == 'refs/heads/main')
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Determine the deployment subdomain
        id: determine_deployment
        run: |
          if [ "${{ github.event_name }}" == "release" ]; then
            echo "subdomain=api" >> $GITHUB_OUTPUT
          else
            echo "subdomain=dev" >> $GITHUB_OUTPUT
          fi

      - name: Trigger workflow in tibiadata-argocd-app-of-apps repo
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ secrets.REPO_ACCESS_TOKEN }}
          repository: TibiaData/tibiadata-argocd-app-of-apps
          event-type: bump-tibiadata-api-go-image-sha
          client-payload: '{"docker_digest": "${{ needs.build.outputs.docker_build_digest }}", "subdomain": "${{ steps.determine_deployment.outputs.subdomain }}"}'

  helm-chart:
    if: github.event_name == 'release'
    permissions:
      contents: write
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Trigger workflow in tibiadata-helm-charts repo
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ secrets.REPO_ACCESS_TOKEN }}
          repository: TibiaData/tibiadata-helm-charts
          event-type: bump-helm-chart-release
          client-payload: '{"chart_name": "${{ github.event.repository.name }}", "release_version": "${{ needs.build.outputs.docker_meta_version }}"}'
